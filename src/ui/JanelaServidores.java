/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import controller.Controller;
import controller.Server;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;

/**
 *
 * @author Egidio73
 */
public class JanelaServidores extends javax.swing.JFrame {

	/**
	 * Creates new form JanelaServidores
	 */
	private Controller controller;

	private List<Server> nSa;

	public JanelaServidores(Controller controller) {
		this.controller = controller;
		nSa = new ArrayList<>();
		setVisible(true);
		setLocationRelativeTo(null);
		setIconImage(new ImageIcon("LIB\\server.png").getImage());
		initComponents();
		iniciaComboBox();
	}

	private void iniciaComboBox() {

		List<Server> sa = controller.getlServersActivos();
		for (int i = 0; i < sa.size(); i++) {
			nSa.add(sa.get(i));
		}
		System.out.println(nSa.size());
		jComboBox1.removeAllItems();

		for (int i = 0; i < nSa.size(); i++) {
			jComboBox1.addItem(nSa.get(i));
		}

		jComboBox1.setSelectedIndex(0);
		Server s = sa.get(0);
		if (s.isEnviar()) {
			jCheckBox1.setSelected(false);
			//jCheckBox1.setText("Desactivar Enviar");
		} else {
			jCheckBox1.setSelected(true);
			//jCheckBox1.setText("Activar Enviar");
		}

		if (s.isReceber()) {
			jCheckBox2.setSelected(false);
			//jCheckBox2.setText("Desactivar Receber");
		} else {
			jCheckBox2.setSelected(true);
			//jCheckBox2.setText("Activar Receber");
		}

		if (s.isEstado()) {
			jCheckBox2.setSelected(false);
			//jCheckBox2.setText("Desactivar Receber");
		} else {
			jCheckBox2.setSelected(true);
			//jCheckBox2.setText("Activar Receber");
		}

		jComboBox1.addItemListener(new ItemListener() {

			@Override
			public void itemStateChanged(ItemEvent e) {

				Server s = sa.get(jComboBox1.getSelectedIndex());
				System.out.println(s.toString());
				if (s.isEnviar()) {
					jCheckBox1.setSelected(false);
					jCheckBox1.setEnabled(true);
					jCheckBox2.setEnabled(true);
					jCheckBox3.setEnabled(true);
					//jCheckBox1.setText("Desactivar Enviar");
				} else {
					jCheckBox1.setSelected(true);
					jCheckBox1.setEnabled(true);
					jCheckBox2.setEnabled(true);
					jCheckBox3.setEnabled(true);
					//jCheckBox1.setText("Activar Enviar");
				}

				if (s.isReceber()) {
					jCheckBox2.setSelected(false);
					jCheckBox1.setEnabled(true);
					jCheckBox2.setEnabled(true);
					jCheckBox3.setEnabled(true);
					//jCheckBox2.setText("Desactivar Receber");
				} else {
					jCheckBox2.setSelected(true);
					jCheckBox1.setEnabled(true);
					jCheckBox2.setEnabled(true);
					jCheckBox3.setEnabled(true);
					//jCheckBox2.setText("Activar Receber");
				}

				if (s.isEstado()) {
					jCheckBox3.setSelected(false);
					//jCheckBox3.setText("Disconnect");
				} else {
					jCheckBox3.setSelected(true);
					jCheckBox1.setEnabled(false);
					jCheckBox2.setEnabled(false);
					jCheckBox3.setEnabled(false);
				}

				jCheckBox1.updateUI();
				jCheckBox2.updateUI();
				jCheckBox3.updateUI();

			}
		});

		jCheckBox1.
			addActionListener(new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent e) {

					Server s = sa.get(jComboBox1.getSelectedIndex());

					if (s.isEnviar()) {
						//jCheckBox1.setText("Activar Enviar");
						s.setEnviar(false);
					} else {
						//jCheckBox1.setText("Desactivar Enviar");
						s.setEnviar(true);
					}

					for (Server nSa1 : nSa) {
						if (nSa1.equals(s)) {
							nSa1 = s;
						}
					}
					controller.setlServersActivos(nSa);
				}
			});

		jCheckBox2.
			addActionListener(new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent e) {

					Server s = sa.get(jComboBox1.getSelectedIndex());

					if (s.isReceber()) {
						//jCheckBox2.setText("Activar Receber");
						s.setReceber(false);
					} else {
						//jCheckBox2.setText("Desactivar Receber");
						s.setReceber(true);
					}

					for (Server nSa1 : nSa) {
						if (nSa1.equals(s)) {
							nSa1 = s;
						}
					}
					controller.setlServersActivos(nSa);
				}
			});

		jCheckBox3.
			addActionListener(new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent e) {
					Server s = sa.get(jComboBox1.getSelectedIndex());

					if (s.isEstado()) {
						//jCheckBox3.setText("Connect");
						s.setEstado(false);
						controller.disconnectServer(s);
						controller.enviaMsg("\\");

					}
					for (Server nSa1 : nSa) {
						if (nSa1.equals(s)) {
							nSa1 = s;
						}
					}
					controller.setlServersActivos(nSa);
				}
			});

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Servidores");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jCheckBox1.setText("Enviar");

        jCheckBox2.setText("Receber");

        jLabel3.setText("Server");

        jCheckBox3.setText("Disconnect");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jCheckBox1)
                            .addGap(18, 18, 18)
                            .addComponent(jCheckBox2)
                            .addGap(18, 18, 18)
                            .addComponent(jCheckBox3))
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
